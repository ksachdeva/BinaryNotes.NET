
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace test.org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1Choice(Name = "BugPrimitive")]
    public class BugPrimitive : IASN1PreparedElement 
    {
        
        private bool bugBoolean_;
        private bool  bugBoolean_selected = false;

        [ASN1Boolean( Name = "" )]
    
		[ASN1Element(Name = "bugBoolean", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public bool BugBoolean
        {
            get { return bugBoolean_; }
            set { selectBugBoolean(value); }
        }
  
        private BigInteger bugInteger_;
        private bool  bugInteger_selected = false;

        [ASN1Integer( Name = "" )]
    
		[ASN1Element(Name = "bugInteger", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public BigInteger BugInteger
        {
            get { return bugInteger_; }
            set { selectBugInteger(value); }
        }
  
        public bool isBugBooleanSelected()
        {
            return this.bugBoolean_selected;
        }

        

        public void selectBugBoolean (bool val) 
        {
            this.bugBoolean_ = val;
            this.bugBoolean_selected = true;
            
            this.bugInteger_selected = false;
            
        }
  
        public bool isBugIntegerSelected()
        {
            return this.bugInteger_selected;
        }

        

        public void selectBugInteger (BigInteger val) 
        {
            this.bugInteger_ = val;
            this.bugInteger_selected = true;
            
            this.bugBoolean_selected = false;
            
        }
  

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(BugPrimitive));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
