
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace test.org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1BoxedType(Name = "TestNI8")]
    public class TestNI8: IASN1PreparedElement 
    {
    
        private long val;
        
        [ASN1Integer(Name = "TestNI8")]
        
		[ASN1ValueRangeConstraint(Min = -576460752303423488L, Max = 576460752303423488L)]
        public long Value
        {
            get { return val; }
            set { val = value; }
        }
        
        public TestNI8()
        {
        }

        public TestNI8(long value)
        {
            this.Value = value;
        }

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TestNI8));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
