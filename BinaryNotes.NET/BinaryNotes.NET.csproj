<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.1;net40</TargetFrameworks>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>BinaryNotes.NET.snk</AssemblyOriginatorKeyFile>
    <Version>1.5.4.4</Version>
    <Authors>Sylvain Prevost, Abdulla G. Abdurakhmanov</Authors>
    <Company>none</Company>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/sylvain-prevost/BinaryNotes.NET</PackageProjectUrl>
    <RepositoryUrl>https://github.com/sylvain-prevost/BinaryNotes.NET</RepositoryUrl>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Copyright></Copyright>
    <PackageId>BinaryNotes.NET</PackageId>
    <AssemblyVersion>1.5.4.4</AssemblyVersion>
    <FileVersion>1.5.4.4</FileVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Product>BinaryNotes.NET</Product>
    <Title>BinaryNotes.NET</Title>
    <PackageReleaseNotes>### New Feature(s)
- Added encoding/decoding support for large asn.1 integer (size &gt; 8 bytes).  
- Enabled BER indefinite-length decoding.  
- Added .NET assembly StrongName.  
- Now targetting both .NET 4.0 &amp; .NET Core 2.1.  
- Added 'SET OF ANY' support when present within sequence.  
- Added missing EXPLICIT keyword support.  

### Bugfixe(s)
- Fixed OID parsing when not last in sequence.  
- Fixed C# class generation when BOOLEAN element is annotated with a DEFAULT value.  
- Fixed C# class generation when MAX keyword is used in asn.1 constraint.  
- Fixed encoding of elements whose values are matching asn.1 DEFAULT definition (ie, it should NOT be encoded for DER).</PackageReleaseNotes>
    <Description>Library enabling easy parsing/manipulation/encoding of ASN.1 buffers via C# classes auto-generated from ASN.1 definition (using BinaryNotes compiler v1.5.3).</Description>
    <PackageTags>ASN1, CMS, C#</PackageTags>
    <RootNamespace>org.bn</RootNamespace>
  </PropertyGroup>

</Project>
